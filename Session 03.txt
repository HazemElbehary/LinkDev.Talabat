
1. Split Base Entity to Base Entity and BaseAuditableEntity

-------------------------

1. Create CustomSaveChangesInterceptor => set values of (CreatedBy, LastModifiedBy, CreatedIn, LastModifiedIn)
2. ILoggedInUserService, LoggedInUserService

-------------------------

1. Create IProductService
	1. GetProductsAsync
	2. GetProductAsync
	3. GetBrandsAsync
	4. GetCategoriesAsync

2. Models >> Create Products
	1. ProductToReturnDto "AllDataOfProduct"
	2. BranDto (Id, Name)
	3. CategoryDto (Id, Name)

3. Create ProductService
	1. GetProductsAsync
	2. GetProductAsync
	3. GetBrandsAsync
	4. GetCategoriesAsync

4. DependancyInjection "Application Layer" => AddApplicationServices
5. Mapping => MappingProfile

---------------------------

1. IServiceManager, ServiceManager

---------------------------

1. Separate Controllers in alone Project
2. Create Class AssemblyInformation

----------------------------

1. Add ProductsController
	1. GetProducts()

2. Add Collection in postman "Session 02"
	1. GetProducts()

----------------------------

1. Load RelatedData

----------------------------

1. Create EndPoint GetProduct() 

----------------------------

1. Create ISpecifications "Domain"  
   ==> Represent Object Have Property For Each Spec "LINQ Operator Expression 'Parameter' "

2. Create BaseISpecifications "Domain" ==> "Object Will Be Send To GetQuery 'LINQ Operators' "
   ==> Implement ISpecifications


3. Create SpecificationsEvaluator 'static' "Persistence/GenericRepository"
	1. GetQuery 'static' ==> Take DbSet And ISpecification And Added Specifications To DbSet And Return Query


4. GetAllWithSpec "GenericRepository" ==> GetAllAsync But Include RelatedData 'Specifications'


5. GetWithSpec "GenericRepository" ==> GetAsync But Include RelatedData 'Specifications'


6. ProductWithBrandAndCategorySpecifications "Domin.Specifications.Product"
   ==> Has Specs OF Product Module